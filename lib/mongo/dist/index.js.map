{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAsC;AAEhC,IAAA,gBAAyC,EAAvC,4BAAW,EAAE,0BAA0B,CAAC;AAEhD,IAAI,CAAC,WAAW,EAAE;IAAE,MAAM,KAAK,CAAC,kEAAkE,CAAC,CAAC;CAAE;AAEtG,IAAI,CAAC,UAAU,EAAE;IAAE,MAAM,KAAK,CAAC,qEAAqE,CAAC,CAAC;CAAE;AAExG,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;AAE1B,IAAI,CAAC,MAAM,EAAE;IAAE,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;CAAE;AAEvE,SAAsB,iBAAiB;;;;;;oBACnC,IAAI,MAAM,CAAC,IAAI,EAAE;wBAAE,sBAAO,MAAM,CAAC,IAAI,EAAC;qBAAE;oBAExC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;wBACX,OAAO,GAAG;4BACZ,eAAe,EAAG,IAAI;4BACtB,kBAAkB,EAAG,IAAI;yBAC5B,CAAC;wBAEF,MAAM,CAAC,OAAO,GAAG,qBAAW,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;4BACnE,OAAO,EAAE,MAAM,QAAA,EAAE,EAAE,EAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAA;wBACjD,CAAC,CAAC,CAAC;qBACN;oBAED,KAAA,MAAM,CAAA;oBAAQ,qBAAM,MAAM,CAAC,OAAO,EAAA;;oBAAlC,GAAO,IAAI,GAAG,SAAoB,CAAC;oBAEnC,sBAAO,MAAM,CAAC,IAAI,EAAC;;;;CACtB;AAjBD,8CAiBC","file":"index.js","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst { MONGODB_URI, MONGODB_DB } = process.env;\r\n\r\nif (!MONGODB_URI) { throw Error(\"Please define the MONGODB_URI environment variable in .env.local\"); }\r\n\r\nif (!MONGODB_DB) { throw Error(\"Please define the MONGODB_DB enrironment variable in the .env.local\"); }\r\n\r\nvar cached = global.mongo;\r\n\r\nif (!cached) { cached = global.mongo = { conn: null, promise: null }; }\r\n\r\nexport async function connectToDatabase() {\r\n    if (cached.conn) { return cached.conn; }\r\n\r\n    if (!cached.promise) {\r\n        const options = {\r\n            useNewUrlParser : true,\r\n            useUnifiedTopology : true\r\n        };\r\n\r\n        cached.promise = MongoClient.connect(MONGODB_URI, options).then((client) => {\r\n            return { client, db : client.db(MONGODB_DB) }\r\n        });\r\n    }\r\n\r\n    cached.conn = await cached.promise;\r\n\r\n    return cached.conn;\r\n}"]}
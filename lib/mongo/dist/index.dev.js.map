{"version":3,"sources":["index.js"],"names":["process","env","MONGODB_URI","MONGODB_DB","Error","cached","global","mongo","conn","promise","connectToDatabase","options","useNewUrlParser","useUnifiedTopology","MongoClient","connect","then","client","db"],"mappings":";;;;;;;AAAA;;mBAGoCA,OAAO,CAACC,G;IAApCC,W,gBAAAA,W;IAAaC,U,gBAAAA,U;;AAErB,IAAI,CAACD,WAAL,EAAkB;AAAE,QAAME,KAAK,CAAC,kEAAD,CAAX;AAAkF;;AAEtG,IAAI,CAACD,UAAL,EAAiB;AAAE,QAAMC,KAAK,CAAC,qEAAD,CAAX;AAAqF;;AAExG,IAAIC,MAAM,GAAGC,MAAM,CAACC,KAApB;;AAEA,IAAI,CAACF,MAAL,EAAa;AAAEA,EAAAA,MAAM,GAAGC,MAAM,CAACC,KAAP,GAAe;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAxB;AAAwD;;AAEhE,SAAeC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACCL,MAAM,CAACG,IADR;AAAA;AAAA;AAAA;;AAAA,2CACuBH,MAAM,CAACG,IAD9B;;AAAA;AAGH,cAAI,CAACH,MAAM,CAACI,OAAZ,EAAqB;AACXE,YAAAA,OADW,GACD;AACZC,cAAAA,eAAe,EAAG,IADN;AAEZC,cAAAA,kBAAkB,EAAG;AAFT,aADC;AAMjBR,YAAAA,MAAM,CAACI,OAAP,GAAiBK,qBAAYC,OAAZ,CAAoBb,WAApB,EAAiCS,OAAjC,EAA0CK,IAA1C,CAA+C,UAACC,MAAD,EAAY;AACxE,qBAAO;AAAEA,gBAAAA,MAAM,EAANA,MAAF;AAAUC,gBAAAA,EAAE,EAAGD,MAAM,CAACC,EAAP,CAAUf,UAAV;AAAf,eAAP;AACH,aAFgB,CAAjB;AAGH;;AAZE;AAAA,0CAciBE,MAAM,CAACI,OAdxB;;AAAA;AAcHJ,UAAAA,MAAM,CAACG,IAdJ;AAAA,2CAgBIH,MAAM,CAACG,IAhBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\n\r\nconst { MONGODB_URI, MONGODB_DB } = process.env;\r\n\r\nif (!MONGODB_URI) { throw Error(\"Please define the MONGODB_URI environment variable in .env.local\"); }\r\n\r\nif (!MONGODB_DB) { throw Error(\"Please define the MONGODB_DB enrironment variable in the .env.local\"); }\r\n\r\nvar cached = global.mongo;\r\n\r\nif (!cached) { cached = global.mongo = { conn: null, promise: null }; }\r\n\r\nexport async function connectToDatabase() {\r\n    if (cached.conn) { return cached.conn; }\r\n\r\n    if (!cached.promise) {\r\n        const options = {\r\n            useNewUrlParser : true,\r\n            useUnifiedTopology : true\r\n        };\r\n\r\n        cached.promise = MongoClient.connect(MONGODB_URI, options).then((client) => {\r\n            return { client, db : client.db(MONGODB_DB) }\r\n        });\r\n    }\r\n\r\n    cached.conn = await cached.promise;\r\n    \r\n    return cached.conn;\r\n}"],"file":"index.dev.js"}
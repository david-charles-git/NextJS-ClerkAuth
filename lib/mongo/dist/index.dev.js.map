{"version":3,"sources":["index.js"],"names":["process","env","MONGODB_URI","MONGODB_DB_ONE","Error","cachedConnection","global","mongo","conn","promise","connectToDatabase","options","useNewUrlParser","useUnifiedTopology","MongoClient","connect","then","client","db_one","db"],"mappings":";;;;;;;AAAA;;mBAEwCA,OAAO,CAACC,G;IAAxCC,W,gBAAAA,W;IAAaC,c,gBAAAA,c;;AAErB,IAAI,CAACD,WAAL,EAAkB;AAAE,QAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AAAiE;;AAErF,IAAI,CAACD,cAAL,EAAqB;AAAE,QAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AAAiE;;AAExF,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,KAA9B;;AAEA,IAAI,CAACF,gBAAL,EAAuB;AAAEA,EAAAA,gBAAgB,GAAGC,MAAM,CAACC,KAAP,GAAe;AAAEC,IAAAA,IAAI,EAAG,IAAT;AAAeC,IAAAA,OAAO,EAAG;AAAzB,GAAlC;AAAoE;;AAE7F,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAClBL,gBAAgB,CAACG,IADC;AAAA;AAAA;AAAA;;AAAA,2CACYH,gBAAgB,CAACG,IAD7B;;AAAA;AAAA,cAGjBH,gBAAgB,CAACI,OAHA;AAAA;AAAA;AAAA;;AAIZE,UAAAA,OAJY,GAIF;AACZC,YAAAA,eAAe,EAAG,IADN;AAEZC,YAAAA,kBAAkB,EAAG;AAFT,WAJE;AAAA;AAAA,0CASeC,qBAAYC,OAAZ,CAAoBb,WAApB,EAAiCS,OAAjC,EAA0CK,IAA1C,CAA+C,UAACC,MAAD,EAAY;AACxF,mBAAO;AACHA,cAAAA,MAAM,EAANA,MADG;AAEHC,cAAAA,MAAM,EAAED,MAAM,CAACE,EAAP,CAAUhB,cAAV;AAFL,aAAP;AAIH,WALgC,CATf;;AAAA;AASlBE,UAAAA,gBAAgB,CAACI,OATC;;AAAA;AAAA;AAAA,0CAiBQJ,gBAAgB,CAACI,OAjBzB;;AAAA;AAiBtBJ,UAAAA,gBAAgB,CAACG,IAjBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst { MONGODB_URI, MONGODB_DB_ONE } = process.env;\r\n\r\nif (!MONGODB_URI) { throw new Error(\"Please define the MONGODC_URI in .env.local\"); }\r\n\r\nif (!MONGODB_DB_ONE) { throw new Error(\"Please define the MONGODB_DB  in .env.local\"); }\r\n\r\nlet cachedConnection = global.mongo;\r\n\r\nif (!cachedConnection) { cachedConnection = global.mongo = { conn : null, promise : null }; }\r\n\r\nconst connectToDatabase = async () => {\r\n    if (cachedConnection.conn) return cachedConnection.conn;\r\n\r\n    if (!cachedConnection.promise) {\r\n        const options = {\r\n            useNewUrlParser : true,\r\n            useUnifiedTopology : true\r\n        };\r\n\r\n        cachedConnection.promise = await MongoClient.connect(MONGODB_URI, options).then((client) => {\r\n            return {\r\n                client,\r\n                db_one: client.db(MONGODB_DB_ONE)\r\n            }\r\n        });\r\n    }\r\n\r\n    cachedConnection.conn = await cachedConnection.promise;\r\n};\r\n\r\nexport { connectToDatabase };"],"file":"index.dev.js"}
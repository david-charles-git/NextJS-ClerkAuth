{"version":3,"sources":["index.js"],"names":["_mongodb","require","process","env","MONGODB_URI","MONGODB_DB_ONE","Error","cachedConnection","global","mongo","conn","promise","connectToDatabase","options","regeneratorRuntime","async","_context","prev","next","abrupt","awrap","MongoClient","connect","then","client","sent","stop"],"mappings":"qGAAA,IAAAA,SAAAC,QAAA,wBAEwCC,QAAQC,IAAxCC,yBAAAA,YAAaC,4BAAAA,eAErB,IAAKD,YAAe,MAAM,IAAIE,MAAM,+CAEpC,IAAKD,eAAkB,MAAM,IAAIC,MAAM,+CAEvC,IAAIC,iBAAmBC,OAAOC,MAELF,iBARjBH,mBAQoCI,OAAOC,MAAQ,CAAEC,KAAO,KAAMC,QAAU,OAEpF,IAAMC,kBAAoB,WAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GARrBd,iBAAaM,KAQQ,OAAAM,EAAAG,OAAA,SARRZ,iBAAAG,MAQQM,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,GAR2DX,iBAAAI,QAQ3D,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAIZL,EAAU,CAVnBR,iBAAgB,EAAYC,oBAAM,GAMbU,EAAAE,KAAA,EAAAJ,mBAAAM,MAJ1BC,SAAAA,YAAAC,QAAAlB,YAAAS,GAAAU,KAAA,SAAAC,GAcY,MAAO,CAZdjB,OAAAA,EAAoBA,OAAmBC,EAAOC,GAAPJ,oBAElB,KAAA,EAJtBE,iBAAmBC,QAIGQ,EAAAS,KAAA,KAAA,EAAA,OAAAT,EAAAE,KAAA,EAAAJ,mBAAAM,MAiBQb,iBAAiBI,SAjBzB,KAAA,EAiBtBJ,iBAAiBG,KAjBKM,EAAAS,KAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU","file":"index.min.js","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst { MONGODB_URI, MONGODB_DB_ONE } = process.env;\r\n\r\nif (!MONGODB_URI) { throw new Error(\"Please define the MONGODC_URI in .env.local\"); }\r\n\r\nif (!MONGODB_DB_ONE) { throw new Error(\"Please define the MONGODB_DB  in .env.local\"); }\r\n\r\nlet cachedConnection = global.mongo;\r\n\r\nif (!cachedConnection) { cachedConnection = global.mongo = { conn : null, promise : null }; }\r\n\r\nconst connectToDatabase = async () => {\r\n    if (cachedConnection.conn) return cachedConnection.conn;\r\n\r\n    if (!cachedConnection.promise) {\r\n        const options = {\r\n            useNewUrlParser : true,\r\n            useUnifiedTopology : true\r\n        };\r\n\r\n        cachedConnection.promise = await MongoClient.connect(MONGODB_URI, options).then((client) => {\r\n            return {\r\n                client,\r\n                db_one: client.db(MONGODB_DB_ONE)\r\n            }\r\n        });\r\n    }\r\n\r\n    cachedConnection.conn = await cachedConnection.promise;\r\n};\r\n\r\nexport { connectToDatabase };"]}
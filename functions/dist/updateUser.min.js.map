{"version":3,"sources":["updateUser.ts"],"names":["axios_1","require","updateUserName","_a","_id","name","patchURL","patchBody","patchOptions","patch","then","response","data","error","console","log","exports","updateUserEmail","email","updateUserPassword","password","updateUserPermissions","permissions"],"mappings":"y7CAAA,IAAAA,QAAAC,QAAA,SAGMC,eAAkE,SAAOC,OAAEC,EAAAD,EAAAC,IAAKC,EAAAF,EAAAE,oGAUlF,OATMC,EAAoB,cAAcF,EAClCG,EAAY,CAAEF,KAAOA,GACrBG,EAAqB,GAE3BR,QAAA,QAAMS,MAAMH,EAAUC,EAAWC,GAC5BE,KAAK,SAACC,GAAgB,OAAOA,EAASC,OACjC,MAAC,SAACC,GAAYC,QAAQC,IAAIF,KACxB,QAAC,cAEb,CAAA,QAsCKG,QAAAd,eAAAA,eApCT,IAAMe,gBAAoE,SAAOd,OAAEC,EAAAD,EAAAC,IAAKc,EAAAf,EAAAe,qGAUpF,OATMZ,EAAoB,cAAcF,EAClCG,EAAY,CAAEW,MAAQA,GACtBV,EAAqB,GAE3BR,QAAA,QAAMS,MAAMH,EAAUC,EAAWC,GAC5BE,KAAK,SAACC,GAAgB,OAAOA,EAASC,OACjC,MAAC,SAACC,GAAYC,QAAQC,IAAIF,KACxB,QAAC,cAEb,CAAA,QA0BqBG,QAAAC,gBAAAA,gBAxBzB,IAAME,mBAA0E,SAAOhB,OAAEC,EAAAD,EAAAC,IAAKgB,EAAAjB,EAAAiB,wGAU1F,OATMd,EAAoB,cAAcF,EAClCG,EAAY,CAAEW,MAAQE,GACtBZ,EAAqB,GAE3BR,QAAA,QAAMS,MAAMH,EAAUC,EAAWC,GAC5BE,KAAK,SAACC,GAAgB,OAAOA,EAASC,OACjC,MAAC,SAACC,GAAYC,QAAQC,IAAIF,KACxB,QAAC,cAEb,CAAA,QAcsCG,QAAAG,mBAAAA,mBAZ1C,IAAME,sBAAgF,SAAOlB,OAAEC,EAAAD,EAAAC,IAAKkB,EAAAnB,EAAAmB,2GAUhG,OATMhB,EAAoB,cAAcF,EAClCG,EAAY,CAAEW,MAAQI,GACtBd,EAAqB,GAE3BR,QAAA,QAAMS,MAAMH,EAAUC,EAAWC,GAC5BE,KAAK,SAACC,GAAgB,OAAOA,EAASC,OACjC,MAAC,SAACC,GAAYC,QAAQC,IAAIF,KACxB,QAAC,cAEb,CAAA,QAE0DG,QAAAK,sBAAAA","file":"updateUser.min.js","sourcesContent":["import axios from \"axios\";\r\nimport { User } from \"@/lib/types/user\";\r\n\r\nconst updateUserName : ({ _id, name } : User) => Promise<User | void> = async ({ _id, name }) => {\r\n    const patchURL : string = `/api/users/${_id}`;\r\n    const patchBody = { name : name };\r\n    const patchOptions : any = {};\r\n\r\n    axios.patch(patchURL, patchBody, patchOptions)\r\n        .then((response) =>  { return response.data; })\r\n        .catch((error) => { console.log(error); })\r\n        .finally(() => { });\r\n\r\n    return;\r\n};\r\nconst updateUserEmail : ({ _id, email } : User) => Promise<User | void> = async ({ _id, email }) => {\r\n    const patchURL : string = `/api/users/${_id}`;\r\n    const patchBody = { email : email };\r\n    const patchOptions : any = {};\r\n\r\n    axios.patch(patchURL, patchBody, patchOptions)\r\n        .then((response) =>  { return response.data; })\r\n        .catch((error) => { console.log(error); })\r\n        .finally(() => { });\r\n\r\n    return;\r\n};\r\nconst updateUserPassword : ({ _id, password } : User) => Promise<User | void> = async ({ _id, password }) => {\r\n    const patchURL : string = `/api/users/${_id}`;\r\n    const patchBody = { email : password };\r\n    const patchOptions : any = {};\r\n\r\n    axios.patch(patchURL, patchBody, patchOptions)\r\n        .then((response) =>  { return response.data; })\r\n        .catch((error) => { console.log(error); })\r\n        .finally(() => { });\r\n\r\n    return;\r\n};\r\nconst updateUserPermissions : ({ _id, permissions } : User) => Promise<User | void> = async ({ _id, permissions }) => {\r\n    const patchURL : string = `/api/users/${_id}`;\r\n    const patchBody = { email : permissions };\r\n    const patchOptions : any = {};\r\n\r\n    axios.patch(patchURL, patchBody, patchOptions)\r\n        .then((response) =>  { return response.data; })\r\n        .catch((error) => { console.log(error); })\r\n        .finally(() => { });\r\n\r\n    return;\r\n};\r\nexport { updateUserName, updateUserEmail, updateUserPassword, updateUserPermissions };"]}
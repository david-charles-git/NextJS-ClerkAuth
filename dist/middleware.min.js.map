{"version":3,"sources":["middleware.ts"],"names":["server_1","require","server_2","NextRequest","from","publicPaths","isPublic","path","find","x","match","RegExp","replace","middleWare","withClerkMiddleware","request","nextUrl","pathname","NextResponse","next","getAuth","userId","signInUrl","URL","url","redirect","exports","config","matcher"],"mappings":"mCAAA,IAAAA,SAAAC,QAAA,wBACAC,SAAAD,QAAA,eACcE,YAAcC,KAG5B,IAAMC,YAA8B,CAAC,IAAK,WAAY,WAAY,QAAS,YAErEC,SAAmD,SAACC,GAGzD,OAFsCF,YAAYG,KAAK,SAAAC,GAAK,OAAAF,EAAKG,MAAM,IAAIC,QAAO,IAAIF,EAAC,KAAIG,QAAQ,KAAM,cAKpGC,WAAab,SAAAc,oBAAoB,SAACC,GACpC,GAAIT,SAASS,EAAQC,QAAQC,UAAa,OAAOf,SAAAgB,aAAaC,OAIjE,GAFQnB,SAAAoB,QAAAL,GAAAM,OASR,OAAOnB,SAAAgB,aAAaC,OANnB,IAAMG,EAAkB,IAAIC,IAAI,WAAYR,EAAQS,KAGpD,OAAOtB,SAAAgB,aAAaO,SAASH,KAM/BI,QAAA,QAAeb,WACFa,QAAAC,OAAS,CAAEC,QAAU","file":"middleware.min.js","sourcesContent":["import { withClerkMiddleware, getAuth } from '@clerk/nextjs/server';\r\nimport { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\n// Set the paths that don't require the user to be signed in\r\nconst publicPaths : Array<string> = ['/', '/signin*', '/signup*', '/api*', '/public*']; //exposed /api so I can test api routes\r\n\r\nconst isPublic : (path : string) => string | undefined = (path) => {\r\n\tconst isPublic : string | undefined = publicPaths.find(x => path.match(new RegExp(`^${x}$`.replace('*$', '($|/)'))));\r\n\r\n\treturn isPublic;\r\n};\r\n\r\nconst middleWare = withClerkMiddleware((request: NextRequest) => {\r\n    if (isPublic(request.nextUrl.pathname)) { return NextResponse.next(); }\r\n\r\n\tconst { userId } = getAuth(request);\r\n\r\n\tif (!userId) {    \r\n\t\tconst signInUrl : URL = new URL('/signin/', request.url);\r\n\t\t//signInUrl.searchParams.set('redirect_url', request.url);\r\n\r\n\t\treturn NextResponse.redirect(signInUrl);\r\n\t}\r\n\r\n\treturn NextResponse.next();\r\n});\r\n\r\nexport default middleWare;\r\nexport const config = { matcher:  '/((?!_next/image|_next/static|favicon.ico).*)'};"]}
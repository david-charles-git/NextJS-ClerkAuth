{"version":3,"sources":["middleware.ts"],"names":[],"mappings":";;AAAA,+CAAoE;AACpE,sCAA2C;AAC/B;IAAE,WAAW,CAAA;CAAE;AAAC,IAAI,CAAA;AAAC,aAAa,CAAC;AAE/C,4DAA4D;AAC5D,IAAM,WAAW,GAAmB,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,uCAAuC;AAE/H,IAAM,QAAQ,GAA2C,UAAC,IAAI;IAC7D,IAAM,QAAQ,GAAwB,WAAW,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAA,MAAI,CAAC,MAAG,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAvD,CAAuD,CAAC,CAAC;IAErH,OAAO,QAAQ,CAAC;AACjB,CAAC,CAAC;AAEF,IAAM,UAAU,GAAG,4BAAmB,CAAC,UAAC,OAAoB;IACxD,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAAE,OAAO,qBAAY,CAAC,IAAI,EAAE,CAAC;KAAE;IAElE,IAAA,yCAAM,CAAsB;IAEpC,IAAI,CAAC,MAAM,EAAE;QACZ,IAAM,SAAS,GAAS,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACzD,0DAA0D;QAE1D,OAAO,qBAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACxC;IAED,OAAO,qBAAY,CAAC,IAAI,EAAE,CAAC;AAC5B,CAAC,CAAC,CAAC;AAEH,qBAAe,UAAU,CAAC;AACb,QAAA,MAAM,GAAG,EAAE,OAAO,EAAG,+CAA+C,EAAC,CAAC","file":"middleware.js","sourcesContent":["import { withClerkMiddleware, getAuth } from '@clerk/nextjs/server';\r\nimport { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\n// Set the paths that don't require the user to be signed in\r\nconst publicPaths : Array<string> = ['/', '/signin*', '/signup*', '/api*', '/public*']; //exposed /api so I can test api routes\r\n\r\nconst isPublic : (path : string) => string | undefined = (path) => {\r\n\tconst isPublic : string | undefined = publicPaths.find(x => path.match(new RegExp(`^${x}$`.replace('*$', '($|/)'))));\r\n\r\n\treturn isPublic;\r\n};\r\n\r\nconst middleWare = withClerkMiddleware((request: NextRequest) => {\r\n    if (isPublic(request.nextUrl.pathname)) { return NextResponse.next(); }\r\n\r\n\tconst { userId } = getAuth(request);\r\n\r\n\tif (!userId) {    \r\n\t\tconst signInUrl : URL = new URL('/signin/', request.url);\r\n\t\t//signInUrl.searchParams.set('redirect_url', request.url);\r\n\r\n\t\treturn NextResponse.redirect(signInUrl);\r\n\t}\r\n\r\n\treturn NextResponse.next();\r\n});\r\n\r\nexport default middleWare;\r\nexport const config = { matcher:  '/((?!_next/image|_next/static|favicon.ico).*)'};"]}
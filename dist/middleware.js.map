{"version":3,"sources":["middleware.ts"],"names":[],"mappings":"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","file":"middleware.js","sourcesContent":["import { withClerkMiddleware, getAuth } from '@clerk/nextjs/server';\r\nimport { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\nconst publicPaths : string[] = ['/', '/signin*', '/signup*', '/api*', \"/testing*\"];\r\nconst adminRestrictedPaths : string[] = ['/admin*'];\r\nconst memberRestrictedPaths : string[] = ['/restricted*'];\r\n\r\nconst isPublic : (path : string) => string | undefined = (path) => {\r\n\tconst isPublic : string | undefined = publicPaths.find((x) => { return path.match(new RegExp(`^${x}$`.replace('*$', '($|/)'))); });\r\n\r\n\treturn isPublic;\r\n};\r\n\r\nconst isAdminRestricted : (path : string) =>  string | undefined = (path) => {\r\n\tconst isRoleRestricted : string | undefined = adminRestrictedPaths.find((x) => { return path.match(new RegExp(`^${x}$`.replace('*$', '($|/)'))); });\r\n\r\n\treturn isRoleRestricted;\r\n}\r\n\r\nconst isMemberRestricted : (path : string) =>  string | undefined = (path) => {\r\n\tconst isRoleRestricted : string | undefined = memberRestrictedPaths.find((x) => { return path.match(new RegExp(`^${x}$`.replace('*$', '($|/)'))); });\r\n\r\n\treturn isRoleRestricted;\r\n}\r\n\r\nconst middleWare = withClerkMiddleware((request: NextRequest) => {\r\n    if (isPublic(request.nextUrl.pathname)) { return NextResponse.next(); }\r\n\r\n\tconst { userId, orgRole } = getAuth(request);\r\n\r\n\tif (!userId) {    \r\n\t\tvar signInUrl : URL = new URL('/signin', request.url);\r\n\t\t//signInUrl.searchParams.set('redirect_url', request.url);\r\n\r\n\t\treturn NextResponse.redirect(signInUrl);\r\n\t}\r\n\r\n\tif (isAdminRestricted(request.nextUrl.pathname) && orgRole !== \"admin\") {\r\n\t\tvar profileUrl : URL = new URL('/profile/', request.url);\r\n\t\t\tprofileUrl.searchParams.set(\"roleRestricted\", \"admin\");\r\n\r\n\t\treturn NextResponse.redirect(profileUrl);\r\n\t}\r\n\r\n\tif (isMemberRestricted(request.nextUrl.pathname) && !orgRole) {\r\n\t\tvar profileUrl : URL = new URL('/profile/', request.url);\r\n\t\t\tprofileUrl.searchParams.set(\"roleRestricted\", \"member\");\r\n\r\n\t\treturn NextResponse.redirect(profileUrl);\r\n\t}\r\n\r\n\treturn NextResponse.next();\r\n});\r\n\r\nexport default middleWare;\r\nexport const config = { matcher:  '/((?!_next/image|_next/static|favicon.ico).*)'};"]}
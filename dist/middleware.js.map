{"version":3,"sources":["middleware.ts"],"names":[],"mappings":";;AAAA,+CAAmE;AACnE,sCAA0C;AAC9B;IAAE,WAAW,CAAA;CAAE;AAAC,IAAI,CAAA;AAAC,aAAa,CAAA;AAE9C,4DAA4D;AAC5D,IAAM,WAAW,GAAmB,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAE9E,IAAM,QAAQ,GAAG,UAAC,IAAY;IAC5B,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAA,MAAI,CAAC,MAAG,CAAA,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAvD,CAAuD,CAAC,CAAC;IAEhG,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAA;AAED,qBAAe,4BAAmB,CAAC,UAAC,OAAoB;IACtD,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAAE,OAAO,qBAAY,CAAC,IAAI,EAAE,CAAC;KAAE;IAE/D,IAAA,yCAAM,CAAsB;IAEpC,IAAI,CAAC,MAAM,EAAE;QACX,IAAM,SAAS,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,CAAA;QAClD,yDAAyD;QAEzD,OAAO,qBAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;KACxC;IAED,OAAO,qBAAY,CAAC,IAAI,EAAE,CAAC;AAC7B,CAAC,CAAC,CAAA;AAEW,QAAA,MAAM,GAAG,EAAE,OAAO,EAAG,+CAA+C,EAAC,CAAC","file":"middleware.js","sourcesContent":["import { withClerkMiddleware, getAuth } from '@clerk/nextjs/server'\r\nimport { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\n\r\n// Set the paths that don't require the user to be signed in\r\nconst publicPaths : Array<string> = ['/', '/signin*', '/signup*', '/public*'];\r\n\r\nconst isPublic = (path: string) => {\r\n  const isPublic = publicPaths.find(x => path.match(new RegExp(`^${x}$`.replace('*$', '($|/)'))));\r\n\r\n  return isPublic;\r\n}\r\n\r\nexport default withClerkMiddleware((request: NextRequest) => {\r\n  if (isPublic(request.nextUrl.pathname)) { return NextResponse.next(); }\r\n  \r\n  const { userId } = getAuth(request);\r\n\r\n  if (!userId) {    \r\n    const signInUrl = new URL('/signin/', request.url)\r\n    //signInUrl.searchParams.set('redirect_url', request.url)\r\n\r\n    return NextResponse.redirect(signInUrl)\r\n  }\r\n\r\n  return NextResponse.next();\r\n})\r\n\r\nexport const config = { matcher:  '/((?!_next/image|_next/static|favicon.ico).*)'};"]}
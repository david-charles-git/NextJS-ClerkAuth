{"version":3,"sources":["route.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAgD;AAEhD,IAAM,YAAY,GAAY,eAAe,CAAC;AAC9C,IAAM,cAAc,GAAY,oBAAoB,CAAC;AAErD,IAAM,GAAG,GAA8C,UAAO,OAAO;;;;oBAC9C,qBAAM,yBAAiB,EAAE,EAAA;;gBAApC,MAAM,GAAK,CAAA,SAAyB,CAAA,OAA9B;gBACG,qBAAM,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,EAAA;;gBAAxC,QAAQ,GAAG,SAA6B;gBACjC,qBAAM,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAAA;;gBAA7E,IAAI,GAAG,SAAsE;gBAEnF,sBAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAC;;;KAC7C,CAAC;AAEO,kBAAG","file":"route.js","sourcesContent":["import { connectToDatabase } from \"@/lib/mongo\";\r\n\r\nconst dataBaseName : string = \"sample_airbnb\";\r\nconst collectionName : string = \"listingsAndReviews\";\r\n\r\nconst GET : (request : Request) => Promise<Response> = async (request) => {\r\n    const { client } = await connectToDatabase();\r\n    const dataBase = await client.db(dataBaseName);\r\n    const data = await dataBase.collection(collectionName).find({}).limit(10).toArray();\r\n\r\n    return new Response(JSON.stringify(data));\r\n};\r\n  \r\nexport { GET };"]}
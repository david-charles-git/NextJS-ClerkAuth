{"version":3,"sources":["route.ts"],"names":["mongo_1","require","server_1","dataBaseName","collectionName","GET","request","__awaiter","connectToDatabase","_a","sent","client","db","collection","find","limit","toArray","data","NextResponse","JSON","stringify","error_1","exports","POST","dataBase","json","insertOne","name","email","password","permissions","repsonse"],"mappings":"y7CAAA,IAAAA,QAAAC,QAAA,eACAC,SAAAD,QAAA,eAEME,aAAwB,WACxBC,eAA0B,QAE1BC,IAAyD,SAAOC,GAAO,OAAAC,eAAA,OAAA,OAAA,EAAA,8EAElD,6BAAA,CAAA,EAAMP,QAAAQ,4BACR,MAAA,CAAA,EADEC,EAAAC,OAAyBC,OACdC,GAAGT,sBACpB,MAAA,CAAA,EADIM,EAAAC,OACWG,WAAWT,gBAAgBU,KAAK,IAAIC,MAAM,IAAIC,kBAE1E,OAFMC,EAAOR,EAAAC,OAEb,CAAA,EAAO,IAAIR,SAAAgB,aAAaC,KAAKC,UAAUH,YAGvC,kBAAA,CAAA,EAAO,IAAIf,SAAAgB,aAAaC,KAAKC,UAAUC,4BAoBtCC,QAAAjB,IAAAA,IAfT,IAAMkB,KAA0D,SAAOjB,GAAO,OAAAC,eAAA,OAAA,OAAA,EAAA,gFACvD,MAAA,CAAA,EAAMP,QAAAQ,4BACR,MAAA,CAAA,EADEC,EAAAC,OAAyBC,OACdC,GAAGT,sBACpB,OADPqB,EAAWf,EAAAC,OACJ,CAAA,EAAMJ,EAAQmB,eACV,OADXR,EAAOR,EAAAC,OACI,CAAA,EAAMc,EAASX,WAAWT,gBACtCsB,UAAU,CACPC,KAAOV,EAAKU,KACZC,MAAQX,EAAKW,MACbC,SAAWZ,EAAKY,SAChBC,YAAcb,EAAKa,sBAG3B,OARMC,EAAWtB,EAAAC,OAQjB,CAAA,EAAO,IAAIR,SAAAgB,aAAaC,KAAKC,UAAUW,WAG7BT,QAAAC,KAAAA","file":"route.min.js","sourcesContent":["import { connectToDatabase } from \"@/lib/mongo\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\n\r\nconst dataBaseName : string = \"AuthTest\";\r\nconst collectionName : string = \"Users\";\r\n\r\nconst GET : (request : NextRequest) => Promise<NextResponse> = async (request) => {\r\n    try {\r\n        const { client } = await connectToDatabase();\r\n        const dataBase = await client.db(dataBaseName);\r\n        const data = await dataBase.collection(collectionName).find({}).limit(10).toArray();\r\n\r\n        return new NextResponse(JSON.stringify(data));\r\n        \r\n    } catch(error) {\r\n        return new NextResponse(JSON.stringify(error));\r\n\r\n    }\r\n};\r\n\r\nconst POST : (request : NextRequest) => Promise<NextResponse> = async (request) => {\r\n    const { client } = await connectToDatabase();\r\n    const dataBase = await client.db(dataBaseName);\r\n    const data = await request.json();\r\n    const repsonse = await dataBase.collection(collectionName)\r\n        .insertOne({\r\n            name : data.name,\r\n            email : data.email,\r\n            password : data.password,\r\n            permissions : data.permissions\r\n        });\r\n\r\n    return new NextResponse(JSON.stringify(repsonse));\r\n};\r\n  \r\nexport { GET, POST };"]}
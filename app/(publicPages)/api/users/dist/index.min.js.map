{"version":3,"sources":["index.js"],"names":["_users","require","handler","req","res","_ref","users","error","regeneratorRuntime","async","_context","prev","next","method","awrap","getUsers","sent","Error","abrupt","status","json","t0","message","setHeader","end","concat","stop"],"mappings":"2FAYA,IAAAA,OAAAC,QAAA,qBAGAC,QAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACA,QAAAT,EAAAU,OADA,OAAAH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,OAKgB,EAAAd,OAAAe,aALhBL,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,GAAAP,EAAAK,EAAAM,KAKgBV,EALhBD,EAKgBC,MAAAC,EALhBF,EAKgBE,MALhB,MAKgB,IAAAU,MAAAV,GALhBG,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAF,EAAAQ,OAAA,SAKgBd,EAAAe,OAAA,KAAAC,KAAA,CAAAd,MAAAA,KALhB,KAAA,GAAA,OAAAI,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAA,EAAAQ,OAAA,SAKgBd,EAAAe,OAAA,KAAAC,KAAA,CAAAb,MAAAG,EAAAW,GAAAC,WALhB,KAAA,GAKgBlB,EAAAmB,UAAA,QAAA,CAAA,QAAAnB,EAAAe,OAAA,KAAAK,IAAA,UAAAC,OAAAtB,EAAAU,OAAA,oBALhB,KAAA,GAAA,IAAA,MAAA,OAAAH,EAAAgB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,gBAKgBxB","file":"index.min.js","sourcesContent":["// import { NextApiRequest, NextApiResponse } from 'next';\r\n\r\n// const handler = async (req: NextApiRequest, res: NextApiResponse) => {\r\n//   const data = await fetch('http://localhost:3000/api/users');\r\n//   const json = await data.json();\r\n\r\n//   res.json(json);\r\n// };\r\n// export { handler }\r\n\r\n// export async function GET(request: Request) {\r\n//   // const data = await fetch('http://localhost:3000/api/users');\r\n//   // const json = await data.json();\r\n//   const response : Response = new Response(\"Hello\");\r\n\r\n//   return response\r\n// }\r\n\r\nimport { getUsers } from \"@/lib/mongo/users\";\r\n\r\nconst handler = async (req, res) => {\r\n\tif (req.method === \"GET\") {\r\n\t\ttry {\r\n\t\t\tconst { users, error } = await getUsers();\r\n\r\n\t\t\tif (error) throw new Error(error);\r\n\r\n\t\t\treturn res.status(200).json({ users });\r\n\r\n\t\t} catch(error) {\r\n\t\t\treturn res.status(500).json({ error : error.message })\r\n\t\t}\r\n\t}\r\n\r\n\tres.setHeader(\"Allow\", [\"GET\"]);\r\n\tres.status(425).end(`Method ${req.method} is not allowed`);\r\n}\r\n\r\nexport default handler;"]}
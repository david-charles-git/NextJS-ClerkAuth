{"version":3,"sources":["index.js"],"names":["handler","req","res","db","collection","find","limit","toArray","data","json"],"mappings":";;;;;;;AAEA;;AAFA;AAyBe,SAAeA,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACU,+BADV;;AAAA;AAAA;AACHC,UAAAA,EADG,QACHA,EADG;AAAA;AAAA,0CAGQA,EAAE,CAACC,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAA5B,EAAgCC,KAAhC,CAAsC,EAAtC,EAA0CC,OAA1C,EAHR;;AAAA;AAGLC,UAAAA,IAHK;AAKXN,UAAAA,GAAG,CAACO,IAAJ,CAASD,IAAT;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// import { getUsers } from \"@/lib/mongo/users\";\r\n\r\nimport { connectToDatabase } from \"@/lib/mongo\"\r\n\r\n// const userHandler =async (request : any, response : any) => {\r\n//     if (request.method === \"GET\") {\r\n//         try {\r\n//             const { users, error } = await getUsers();\r\n\r\n//             if (error) { throw new Error(error); }\r\n\r\n//             return response.status(200).json({ users });\r\n\r\n//         } catch (error : any) {\r\n//             return response.status(500).json({ error : error.message });\r\n//         }\r\n//     }\r\n\r\n//     response.setHeader(\"Allow\", [\"GET\"]);\r\n//     response.status(425).end(`Method ${ request.method } is not allowed`);\r\n// };\r\n// export default userHandler;\r\n\r\n\r\n\r\nexport default async function handler(req, res) {\r\n    const { db } = await connectToDatabase();\r\n\r\n    const data = await db.collection(\"Users\").find({}).limit(20).toArray();\r\n\r\n    res.json(data);\r\n}"],"file":"index.dev.js"}
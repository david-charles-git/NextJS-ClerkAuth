{"version":3,"sources":["index.js"],"names":["_mongo","require","handler","req","res","_ref","db","data","regeneratorRuntime","async","_context","prev","next","awrap","connectToDatabase","sent","collection","find","limit","toArray","json","stop"],"mappings":"4FAEA,IAAAA,OAAAC,QAAA,eAuBe,SAAeC,QAAQC,EAAKC,GAA5B,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,OAAA,EAAAb,OAAAc,sBAAA,KAAA,EAAA,OAAAT,EAAAK,EAAAK,KAAAT,EAAAD,EAAAC,GAAAI,EAAAE,KAAA,EAAAJ,mBAAAK,MAKXP,EAAAU,WAAA,SAAAC,KAAA,IAAAC,MAAA,IAAAC,WALW,KAAA,EAKXf,EALWM,EAAAK,KAAAX,EAAAgB,KAAAb,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAW","file":"index.min.js","sourcesContent":["// import { getUsers } from \"@/lib/mongo/users\";\r\n\r\nimport { connectToDatabase } from \"@/lib/mongo\"\r\n\r\n// const userHandler =async (request : any, response : any) => {\r\n//     if (request.method === \"GET\") {\r\n//         try {\r\n//             const { users, error } = await getUsers();\r\n\r\n//             if (error) { throw new Error(error); }\r\n\r\n//             return response.status(200).json({ users });\r\n\r\n//         } catch (error : any) {\r\n//             return response.status(500).json({ error : error.message });\r\n//         }\r\n//     }\r\n\r\n//     response.setHeader(\"Allow\", [\"GET\"]);\r\n//     response.status(425).end(`Method ${ request.method } is not allowed`);\r\n// };\r\n// export default userHandler;\r\n\r\n\r\n\r\nexport default async function handler(req, res) {\r\n    const { db } = await connectToDatabase();\r\n\r\n    const data = await db.collection(\"Users\").find({}).limit(20).toArray();\r\n\r\n    res.json(data);\r\n}"]}
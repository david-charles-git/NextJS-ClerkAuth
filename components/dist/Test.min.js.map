{"version":3,"sources":["Test.tsx"],"names":["react_1","require","axios_1","Test","_a","useState","users","setUsers","_b","isLoading","setIsLoading","useEffect","__awaiter","get","response","sent","data","console","log","error_1","React","createElement","Fragment","map","user","key","JSON","stringify","onClick","postBody","name","email","password","permissions","post","then","error","exports"],"mappings":"y7CAEA,IAAAA,QAAAC,QAAA,SACAC,QAAAD,QAAA,SAGME,KAAO,WACH,IAAAC,EAAAJ,QAAAK,SAAA,IAACC,EAAAF,EAAA,GAAOG,EAAAH,EAAA,GACRI,EAAAR,QAAAK,UAAA,GAACI,EAAAD,EAAA,GAAWE,EAAAF,EAAA,GAmDlB,OAFAR,QAAAW,UAAU,WAvB6BC,eAAA,OAAA,OAAA,EAAA,8EAEU,6BAAA,CAAA,EAAMV,QAAA,QAAMW,IAAI,6BAAnDC,EAAmCV,EAAAW,OAEzCR,EAASO,EAASE,qCAGlBC,QAAQC,IAAIC,gCAgBa,IAG7BC,MAAAC,cAAAD,MAAAE,SAAA,KAEQhB,EACAc,MAAAC,cAAA,MAAA,KAEQf,EAAMiB,IAAI,SAACC,EAAMC,GACb,OACIL,MAAAC,cAAA,IAAA,CAAGI,IAAMA,GAAQC,KAAKC,UAAUH,OAMhDJ,MAAAC,cAAAD,MAAAE,SAAA,MAIAb,EACAW,MAAAC,cAAA,IAAA,KAAA,WAEAD,MAAAC,cAAA,IAAA,CAAGO,QAtE0B,WAAA,OAAAhB,eAAA,OAAA,OAAA,EAAA,qDACrCF,GAAa,GAEb,IAC6B,aACnBmB,EAAkB,CACpBC,KAAO,QACPC,MAAQ,cACRC,SAAW,OACXC,YAAc,QAGlB/B,QAAA,QAAMgC,KARmB,aAQLL,GACfM,KAAK,SAACrB,GAAgBG,QAAQC,IAAIJ,KAC7B,MAAC,SAACsB,GAAYnB,QAAQC,IAAIkB,KACxB,QAAC,WAAQ1B,GAAa,KAEpC,MAAO0B,GACLnB,QAAQC,IAAIkB,GACZ1B,GAAa,mBAmDc,cAKvC2B,QAAA,QAAelC","file":"Test.min.js","sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { User } from \"@/lib/types/user\";\r\n\r\nconst Test = () => {\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n    const createUser : () => Promise<void> = async () => {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const postURL : string = \"/api/users\";\r\n            const postBody : User = {\r\n                name : \"david\",\r\n                email : \"asd@asd.com\",\r\n                password : \"root\",\r\n                permissions : \"none\"\r\n            };\r\n\r\n            axios.post(postURL, postBody)\r\n                .then((response) =>  { console.log(response); })\r\n                .catch((error) => { console.log(error); })\r\n                .finally(() => { setIsLoading(false); });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setIsLoading(false);\r\n\r\n        }\r\n        \r\n    };\r\n    const getUsers : () => Promise<void> = async () => {\r\n        try {\r\n            const response : AxiosResponse<User[]> = await axios.get(\"/api/users\");\r\n\r\n            setUsers(response.data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    };\r\n    const getUser : (_id : string) =>Promise<void> = async (_id) => {\r\n        try {\r\n            const response : AxiosResponse<User[]> = await axios.get(`/api/users/${_id}`);\r\n\r\n            setUsers(response.data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => { getUsers(); }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                users ?\r\n                <div>\r\n                    {\r\n                        users.map((user, key) => {\r\n                            return (\r\n                                <p key={ key }>{ JSON.stringify(user) }</p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n\r\n            {\r\n                isLoading ?\r\n                <p>Loading</p>\r\n                :\r\n                <p onClick={ createUser }>Add User</p>\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default Test;"]}